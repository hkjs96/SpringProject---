<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1">
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:kr/or/anyapart/spring/context-*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
<!-- 		<url-pattern>*.do</url-pattern> -->
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>MultipartFilter</filter-name>
		<filter-class>org.springframework.web.multipart.support.MultipartFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>MultipartFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>xssEscapeServletFilter</filter-name>
		<filter-class>com.navercorp.lucy.security.xss.servletfilter.XssEscapeServletFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>xssEscapeServletFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- rest 필터 -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<servlet>
		<servlet-name>action</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>
				/WEB-INF/spring/appServlet/servlet-context.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
		<multipart-config />
	</servlet>
	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>/</url-pattern>
		<url-pattern>/index.do</url-pattern>
	</servlet-mapping>
	<welcome-file-list>
		<welcome-file>index.do</welcome-file>
	</welcome-file-list>

<!-- egovFramework 기본설정으로 접근제어를 브라우저를 통해 하기위한 설정임
하지만 우리는 form을 통한 인증을 하고 있기때문에 필요 없는 설정임 -->
<!-- 	<login-config> -->
<!-- 		<auth-method>BASIC</auth-method> -->
<!-- 	</login-config> -->
	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/errors/error.jsp</location>
	</error-page>
	<error-page>
		<error-code>405</error-code>
		<location>/errors/error.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/errors/error.jsp</location>
	</error-page>
	<error-page>
		<error-code>500</error-code>
		<location>/errors/error.jsp</location>
	</error-page>
<!-- 
공식 인증서가 아니기 때문에 443 포트 바로 인식 불가해서,
redirect를 통해 강제로 443으로 이동하기 위해 작성한 코드 
하지만 한 번 443 포트로 접속하게 되면 다음부터는 자동으로 443으로 접속되기 때문에
굳이 이 코드를 쓸 필요가 없다. 
 -->
<!-- 	<security-constraint> -->
<!-- 		<web-resource-collection> -->
<!-- 			<web-resource-name>my-secure-app</web-resource-name> -->
<!-- 			<url-pattern>/*</url-pattern> -->
<!-- 		</web-resource-collection> -->
<!-- 		<user-data-constraint> -->
<!-- 			<transport-guarantee>CONFIDENTIAL</transport-guarantee> -->
<!-- 		</user-data-constraint> -->
<!-- 	</security-constraint> -->
</web-app>